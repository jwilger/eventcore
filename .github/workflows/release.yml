name: Release Documentation

# Triggered when release-plz creates a GitHub release
# Note: Crate publishing to crates.io is handled by release-plz
on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Note: Crate publishing is now handled by the release-plz workflow
  # This workflow only handles documentation publishing when a release is created

  publish-docs:
    name: Publish Documentation
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          # Share cache with CI workflow
          shared-key: "ci"
      
      - name: Cache mdBook
        uses: actions/cache@v4
        id: mdbook-cache
        with:
          path: ~/.cargo/bin/mdbook
          key: mdbook-0.4.40

      - name: Install mdBook
        if: steps.mdbook-cache.outputs.cache-hit != 'true'
        run: |
          MDBOOK_VERSION="0.4.40"
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v${MDBOOK_VERSION}/mdbook-v${MDBOOK_VERSION}-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          mkdir -p ~/.cargo/bin
          mv mdbook ~/.cargo/bin/
          chmod +x ~/.cargo/bin/mdbook
      
      - name: Add cargo bin to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Build API documentation
        run: |
          cargo doc --no-deps --workspace
          # Copy to website output
          mkdir -p website/book/api
          cp -r target/doc/* website/book/api/
      
      - name: Sync documentation
        run: |
          cd website
          chmod +x sync-docs.sh
          ./sync-docs.sh
      
      - name: Build website
        run: |
          cd website
          mdbook build
          # Copy .nojekyll to prevent Jekyll processing
          cp static/.nojekyll book/
      
      - name: Add version information
        run: |
          # Add release version to the website
          VERSION="${{ github.event.release.tag_name }}"
          RELEASE_URL="${{ github.event.release.html_url }}"
          
          # Create a version banner
          cat > website/book/version.js << EOF
          document.addEventListener('DOMContentLoaded', function() {
            const banner = document.createElement('div');
            banner.className = 'version-banner';
            banner.innerHTML = \`
              <span>Version: <a href="${RELEASE_URL}">${VERSION}</a></span>
            \`;
            document.body.insertBefore(banner, document.body.firstChild);
          });
          EOF
          
          # Add CSS for version banner
          mkdir -p website/book/theme/css
          cat >> website/book/theme/css/custom.css << EOF
          
          .version-banner {
            background: var(--eventcore-orange);
            color: white;
            padding: 0.5rem 1rem;
            text-align: center;
            font-size: 0.9rem;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
          }
          
          .version-banner a {
            color: white;
            font-weight: bold;
            text-decoration: underline;
          }
          EOF
          
          # Include version script in all HTML files
          find website/book -name "*.html" -type f -exec sed -i '/<\/body>/i <script src="/eventcore/version.js"></script>' {} \;
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/book
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4