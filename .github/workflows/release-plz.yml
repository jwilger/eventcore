name: Release-plz

# This workflow creates release PRs when changes are pushed to main.
# It only runs the 'release-pr' command to avoid circular dependency issues
# during initial publishing of workspace crates.
#
# To actually publish to crates.io:
# 1. Merge the release PR created by this workflow
# 2. Manually run 'cargo publish' for each crate in dependency order:
#    - eventcore-macros
#    - eventcore
#    - eventcore-memory
#    - eventcore-postgres
# 3. Once all crates are published, re-enable dependencies_update in release-plz.toml

permissions:
  pull-requests: write
  contents: write
  id-token: write  # For publishing to crates.io

on:
  push:
    branches:
      - main

jobs:
  release-plz:
    name: Release-plz
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Run release-plz
        uses: release-plz/action@v0.5.102
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          # Only create PR, don't release yet
          # This prevents circular dependency issues during initial publishing
          command: release-pr
          # Enable debug output
          rust_log: debug