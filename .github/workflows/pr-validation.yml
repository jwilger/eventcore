name: PR Validation

on:
  pull_request:
    types: [opened, edited, synchronize, ready_for_review]

permissions:
  pull-requests: write
  issues: write

jobs:
  validate-pr-description:
    name: Validate PR Description
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Description
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Required sections from our template
            const requiredSections = [
              '## Description',
              '## Type of Change',
              '## Testing',
              '## Security Checklist',
              '## Code Quality',
              '## Reviewer Checklist',
              '## Review Focus'
            ];
            
            const missingSections = requiredSections.filter(section => !body.includes(section));
            
            if (missingSections.length > 0) {
              const errorMessage = `
              ❌ **PR Description Validation Failed**
              
              Your PR description is missing required sections from the template:
              ${missingSections.map(s => `- ${s}`).join('\n')}
              
              Please update your PR description to include all required sections from the [PR template](.github/pull_request_template.md).
              
              **Tip**: You can edit your PR description by clicking the "..." menu in the top right of the PR description and selecting "Edit".
              `;
              
              core.setFailed(errorMessage);
              
              // Also post a comment for visibility
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: errorMessage
              });
              return;
            }
            
            // Check for empty checkboxes in ALL checklist sections (except Type of Change)
            const checkboxPattern = /- \[ \]/g;
            
            // Extract all sections that have checklists
            const testingSection = body.match(/## Testing[\s\S]*?(?=##|$)/);
            const securitySection = body.match(/## Security Checklist[\s\S]*?(?=##|$)/);
            const codeQualitySection = body.match(/## Code Quality[\s\S]*?(?=##|$)/);
            const reviewerSection = body.match(/## Reviewer Checklist[\s\S]*?(?=##|$)/);
            
            let sectionsWithUnchecked = [];
            
            // Check each section for unchecked items
            if (testingSection && testingSection[0].match(checkboxPattern)) {
              sectionsWithUnchecked.push('Testing');
            }
            
            if (securitySection && securitySection[0].match(checkboxPattern)) {
              sectionsWithUnchecked.push('Security Checklist');
            }
            
            if (codeQualitySection && codeQualitySection[0].match(checkboxPattern)) {
              sectionsWithUnchecked.push('Code Quality');
            }
            
            if (reviewerSection && reviewerSection[0].match(checkboxPattern)) {
              sectionsWithUnchecked.push('Reviewer Checklist');
            }
            
            if (sectionsWithUnchecked.length > 0) {
              const errorMessage = `
              ❌ **PR Validation Failed - Checklists Incomplete**
              
              All checklist items must be checked by a human reviewer before this PR can be merged.
              
              The following sections have unchecked items:
              ${sectionsWithUnchecked.map(s => `- **${s}**`).join('\n')}
              
              **Important**: 
              - Do NOT pre-check items when creating the PR
              - Each item must be manually verified by a human
              - Check items even if they don't apply (to confirm human review)
              - Only the "Type of Change" section is exempt from this requirement
              
              Please have a human reviewer check off all items after verifying each one.
              `;
              
              core.setFailed(errorMessage);
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: errorMessage
              });
              return;
            }
            
            console.log('✅ PR description follows template');