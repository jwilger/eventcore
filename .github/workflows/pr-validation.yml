name: PR Validation

on:
  pull_request:
    types: [opened, edited, ready_for_review]

permissions:
  pull-requests: write
  issues: write

jobs:
  validate-pr-description:
    name: Validate PR Description
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Description
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Skip validation for draft PRs
            if (pr.draft) {
              console.log('✅ Skipping validation for draft PR');
              return;
            }
            
            // Required sections from our template
            const requiredSections = [
              '## Description',
              '## Type of Change',
              '## Testing',
              '## Security Checklist',
              '## Code Quality',
              '## Reviewer Checklist',
              '## Review Focus'
            ];
            
            const missingSections = requiredSections.filter(section => !body.includes(section));
            
            if (missingSections.length > 0) {
              const errorMessage = `
              ❌ **PR Description Validation Failed**
              
              Your PR description is missing required sections from the template:
              ${missingSections.map(s => `- ${s}`).join('\n')}
              
              Please update your PR description to include all required sections from the [PR template](.github/pull_request_template.md).
              
              **Tip**: You can edit your PR description by clicking the "..." menu in the top right of the PR description and selecting "Edit".
              `;
              
              core.setFailed(errorMessage);
              
              // Also post a comment for visibility
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: errorMessage
              });
              return;
            }
            
            // Check for empty checkboxes in submitter sections (not Reviewer Checklist)
            const checkboxPattern = /- \[ \]/g;
            
            // Extract submitter sections that have checklists
            const testingSection = body.match(/## Testing[\s\S]*?(?=##|$)/);
            const securitySection = body.match(/## Security Checklist[\s\S]*?(?=##|$)/);
            const codeQualitySection = body.match(/## Code Quality[\s\S]*?(?=##|$)/);
            const reviewerSection = body.match(/## Reviewer Checklist[\s\S]*?(?=##|$)/);
            
            let submitterSectionsWithUnchecked = [];
            let reviewerHasUnchecked = false;
            
            // Check submitter sections for unchecked items
            if (testingSection && testingSection[0].match(checkboxPattern)) {
              submitterSectionsWithUnchecked.push('Testing');
            }
            
            if (securitySection && securitySection[0].match(checkboxPattern)) {
              submitterSectionsWithUnchecked.push('Security Checklist');
            }
            
            if (codeQualitySection && codeQualitySection[0].match(checkboxPattern)) {
              submitterSectionsWithUnchecked.push('Code Quality');
            }
            
            // Check reviewer section separately
            if (reviewerSection && reviewerSection[0].match(checkboxPattern)) {
              reviewerHasUnchecked = true;
            }
            
            // If submitter sections have unchecked items, convert to draft
            if (submitterSectionsWithUnchecked.length > 0) {
              // Convert to draft
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                draft: true
              });
              
              const draftMessage = `
              🔄 **PR Converted to Draft**
              
              This PR has been automatically converted to draft status because the following submitter checklists have unchecked items:
              ${submitterSectionsWithUnchecked.map(s => `- **${s}**`).join('\n')}
              
              **Next Steps:**
              1. Review and check off all items in the submitter sections after verifying each one
              2. Once all submitter checklists are complete, click "Ready for review"
              3. The Reviewer Checklist should be completed by the reviewer, not the submitter
              
              **Note**: Each checkbox represents a quality gate that must be manually verified.
              `;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: draftMessage
              });
              
              core.setFailed('PR converted to draft due to incomplete submitter checklists');
              return;
            }
            
            // If only reviewer checklist has unchecked items, that's expected - just fail the check
            if (reviewerHasUnchecked) {
              core.setFailed('Reviewer checklist incomplete - waiting for reviewer to complete');
              return;
            }
            
            console.log('✅ PR description follows template and all submitter checklists are complete');