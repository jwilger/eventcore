[package]
name = "eventcore"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true
readme.workspace = true
description = "Multi-stream aggregateless event sourcing library with type-driven development"

[dependencies]
# Core dependencies
tokio = { workspace = true }
async-trait = { workspace = true }
uuid = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
chrono = { workspace = true }

# Type safety dependencies
nutype = { workspace = true }

# Random number generation for jitter
rand = { workspace = true }

# Async stream utilities (for event subscriptions)
futures = { workspace = true }

# Optional dependencies for testing utilities
proptest = { workspace = true, optional = true }
miette = { version = "7.6.0", features = ["fancy"] }
rmp-serde = "1.3.0"
bincode = { version = "2.0.1", features = ["serde"] }

# Database support for resource management
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres"], optional = true }

# Observability integrations
opentelemetry = { version = "0.30", features = ["metrics", "trace"], optional = true }
opentelemetry-otlp = { version = "0.30", features = ["grpc-tonic", "metrics"], optional = true }
opentelemetry_sdk = { version = "0.30", features = ["rt-tokio"], optional = true }
tracing-opentelemetry = { version = "0.31", optional = true }
prometheus = { version = "0.14", optional = true }

[dev-dependencies]
proptest = { workspace = true }
tokio-test = { workspace = true }
insta = { workspace = true }
criterion = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-test = "0.2.5"
rand = { workspace = true }
axum = { version = "0.8", features = ["tokio"] }

[features]
default = []
testing = ["dep:proptest"]
postgres = ["dep:sqlx"]
opentelemetry = ["dep:opentelemetry", "dep:opentelemetry-otlp", "dep:opentelemetry_sdk", "dep:tracing-opentelemetry"]
prometheus = ["dep:prometheus"]
all-exporters = ["opentelemetry", "prometheus"]

[lints]
workspace = true
